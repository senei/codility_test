<!DOCTYPE html>
<html>

<head>
    <title>StoneWall - codility</title>
    <meta charset="UTF-8">
    <meta name="description" content="Cover " Manhattan skyline " using the minimum number of rectangles.">
    <meta name="author" content="senei">
</head>

<script type="text/javascript">
function solution(H) {
    N = H.length;
    stack = new Array(N);
    num = 0;
    stack[num++] = H[0];
    result = 1;
    for (i = 1; i < N; i++) {
        // store the stonewall in ascending order and pop out the larger
        // stonewall than the current stonewall
        while (num > 0 && stack[num - 1] > H[i]) {
            num--;
        }
        // if the stack is empty or the top of stack isn't equal to the
        // current stonewall, then we should push the current stonewall in
        // the stack and add 1 to the result.
        if (num === 0 || stack[num - 1] != H[i]) {
            stack[num++] = H[i];
            result++;
        }
    }
    return result;
}
</script>

<body>
    <p>Task name: StoneWall
        <br/>Cover "Manhattan skyline" using the minimum number of rectangles.</p>
    <br/>
    <a href="https://codility.com/programmers/lessons/5">codility.com/programmers/lessons/5</a>
    <br/>
    <p>Solution to this task can be found at our blog.</p>
    <p>You are going to build a stone wall. The wall should be straight and N meters long, and its thickness should be constant; however, it should have different heights in different places. The height of the wall is specified by a zero-indexed array H of N positive integers. H[I] is the height of the wall from I to I+1 meters to the right of its left end. In particular, H[0] is the height of the wall's left end and H[Nâˆ’1] is the height of the wall's right end.</p>
    <p>The wall should be built of cuboid stone blocks (that is, all sides of such blocks are rectangular). Your task is to compute the minimum number of blocks needed to build the wall.</p>
    <p>Write a function:</p>
    <code>int solution(int H[], int N);</code>
    <p>that, given a zero-indexed array H of N positive integers specifying the height of the wall, returns the minimum number of blocks needed to build it.</p>
    <p>For example, given array H containing N = 9 integers:</p>
    <code>H[0] = 8 H[1] = 8 H[2] = 5
        <br/>H[3] = 7 H[4] = 9 H[5] = 8
        <br/>H[6] = 7 H[7] = 4 H[8] = 8</code>
    <p>the function should return 7. The figure shows one possible arrangement of seven blocks.</p>
</body>

</html>
