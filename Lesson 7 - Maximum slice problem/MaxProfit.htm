<!DOCTYPE html>
<html>

<head>
    <title>MaxProfit - codility</title>
    <meta charset="UTF-8">
    <meta name="description" content="Given a log of stock prices compute the maximum possible earning.">
    <meta name="author" content="senei">
</head>

<script type="text/javascript">
function solution(A) {
    var count = 0,
        multiply = 0;
    for (i = 0; i < A.length; i++) {
        if (A[i] === 0) {
            multiply = multiply + 1;
        }
        if (multiply > 0) {
            if (A[i] == 1) {
                count = count + multiply;
                if (count > 1000000000) {
                    return -1;
                }
            }
        }
    }
    return count;
}
</script>

<body>
    <p>Task name: MaxProfit
        <br/>Given a log of stock prices compute the maximum possible earning.</p>
    <br/>
    <a href="https://codility.com/programmers/lessons/7">codility.com/programmers/lessons/7</a>
    <br/>
    <p>A zero-indexed array A consisting of N integers is given. It contains daily prices of a stock share for a period of N consecutive days. If a single share was bought on day P and sold on day Q, where 0 ≤ P ≤ Q &lt; N, then the profit of such transaction is equal to A[Q] − A[P], provided that A[Q] ≥ A[P]. Otherwise, the transaction brings loss of A[P] − A[Q].</p>
    <p>For example, consider the following array A consisting of six elements such that:</p>
  <code>A[0] = 23171
  <br/>A[1] = 21011
  <br/>A[2] = 21123
  <br/>A[3] = 21366
  <br/>A[4] = 21013
  <br/>A[5] = 21367</code>
<p>If a share was bought on day 0 and sold on day 2, a loss of 2048 would occur because A[2] − A[0] = 21123 − 23171 = −2048. If a share was bought on day 4 and sold on day 5, a profit of 354 would occur because A[5] − A[4] = 21367 − 21013 = 354. Maximum possible profit was 356. It would occur if a share was bought on day 1 and sold on day 5.</p>
<p>Write a function,</p>
<code>int solution(int A[], int N);</code>
<p>that, given a zero-indexed array A consisting of N integers containing daily prices of a stock share for a period of N consecutive days, returns the maximum possible profit from one transaction during this period. The function should return 0 if it was impossible to gain any profit.</p>
<p>For example, given array A consisting of six elements such that:</p>
<code>A[0] = 23171
  <br/>A[1] = 21011
  <br/>A[2] = 21123
  <br/>A[3] = 21366
  <br/>A[4] = 21013
  <br/>A[5] = 21367</code>
<p>the function should return 356, as explained above.</p>


</body>

</html>
